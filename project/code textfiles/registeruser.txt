package dependencies;
import java.awt.Color;
import java.awt.EventQueue;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.JPanel;
import javax.swing.JPasswordField;
import javax.swing.JTextField;
import javax.swing.SwingConstants;
import javax.swing.border.EmptyBorder;
import javax.swing.border.LineBorder;
import javax.swing.border.MatteBorder;

import connector.Connector;

public class registerform extends JFrame implements ActionListener{

	/**
	 * 
	 */
	JPanel panel_1;
	private JPanel contentPane;
	private JTextField fnametxt;
	private JTextField emailidtxt;
	private JTextField phnnotxt;
	private JPasswordField password;
	private JTextField weightxt;
	private JComboBox gendercombo;
	private JComboBox bgcombo;
	JPanel panel;
	int user_flag;
	private JTextField fname1;
	private JTextField emailtxt1;
	private JTextField phnotxt1;
	private JPasswordField password1;
	private JTextField dobtxt;
	JComboBox comboBox;
	JComboBox comboBox_1;
	JLabel errorlbl;
	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					registerform frame = new registerform();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the frame.
	 */
	public registerform() {
		
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		//setExtendedState(JFrame.MAXIMIZED_BOTH);
		setBounds(100, 100, 1181, 730);
		contentPane = new JPanel();
		contentPane.setBackground(new Color(255, 255, 255));
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
		setContentPane(contentPane);
		contentPane.setLayout(null);
		
		JButton btnNewButton = new JButton("As Blood Bank");
		btnNewButton.setBorder(new LineBorder(new Color(255, 69, 0), 1, true));
		btnNewButton.setForeground(new Color(255, 69, 0));
		btnNewButton.addActionListener(this);
		
		errorlbl = new JLabel("");
		errorlbl.setHorizontalAlignment(SwingConstants.CENTER);
		errorlbl.setBounds(700, 600, 430, 50);
		contentPane.add(errorlbl);
		errorlbl.setFont(new Font("Times New Roman", Font.PLAIN, 20));
		errorlbl.setForeground(Color.YELLOW);
		
		panel = new JPanel();
		panel.setBackground(new Color(255, 255, 255));
		panel.setVisible(false);
		
		panel_1 = new JPanel();
		panel_1.setForeground(new Color(255, 69, 0));
		panel_1.setBackground(Color.WHITE);
		panel_1.setVisible(false);
		panel_1.setBorder(new LineBorder(new Color(0, 0, 0), 3));
		panel_1.setLayout(null);
		panel_1.setBounds(12, 131, 1139, 539);
		contentPane.add(panel_1);
		
		comboBox_1 = new JComboBox();
		comboBox_1.setForeground(new Color(255, 69, 0));
		comboBox_1.setBorder(new LineBorder(new Color(255, 69, 0), 1, true));
		comboBox_1.setModel(new DefaultComboBoxModel(new String[] {"Kothrud", "Karve Nagar", "Warje"}));
		comboBox_1.setFont(new Font("Times New Roman", Font.PLAIN, 18));
		comboBox_1.setBounds(191, 321, 250, 30);
		panel_1.add(comboBox_1);
		
		JButton button = new JButton("Submit as Blood Bank");
		button.setBorder(new LineBorder(new Color(255, 69, 0), 1, true));
		button.setForeground(new Color(255, 69, 0));
		button.setBounds(308, 471, 200, 50);
		panel_1.add(button);
		button.addActionListener(this);
		button.setFont(new Font("Times New Roman", Font.BOLD, 18));
		
		JLabel label = new JLabel("Register Form");
		label.setBorder(new LineBorder(new Color(255, 69, 0), 1, true));
		label.setHorizontalAlignment(SwingConstants.CENTER);
		label.setForeground(Color.WHITE);
		label.setFont(new Font("Times New Roman", Font.BOLD, 32));
		label.setBounds(137, 0, 653, 62);
		panel_1.add(label);
		
		JLabel label_4 = new JLabel("Full Name");
		label_4.setForeground(new Color(255, 69, 0));
		label_4.setFont(new Font("Times New Roman", Font.BOLD, 18));
		label_4.setBounds(56, 144, 80, 30);
		panel_1.add(label_4);
		
		JLabel label_6 = new JLabel("Email ID");
		label_6.setForeground(new Color(255, 69, 0));
		label_6.setFont(new Font("Times New Roman", Font.BOLD, 18));
		label_6.setBounds(56, 206, 80, 30);
		panel_1.add(label_6);
		
		JLabel label_10 = new JLabel("Phone no.");
		label_10.setForeground(new Color(255, 69, 0));
		label_10.setFont(new Font("Times New Roman", Font.BOLD, 18));
		label_10.setBounds(56, 266, 80, 30);
		panel_1.add(label_10);
		
		JLabel lblLocation = new JLabel("Location");
		lblLocation.setForeground(new Color(255, 69, 0));
		lblLocation.setFont(new Font("Times New Roman", Font.BOLD, 18));
		lblLocation.setBounds(56, 314, 80, 30);
		panel_1.add(lblLocation);
		
		JLabel label_12 = new JLabel("New Password");
		label_12.setForeground(new Color(255, 69, 0));
		label_12.setFont(new Font("Times New Roman", Font.BOLD, 18));
		label_12.setBounds(56, 405, 120, 30);
		panel_1.add(label_12);
		
		fname1 = new JTextField();
		fname1.setOpaque(false);
		fname1.setForeground(new Color(255, 255, 255));
		fname1.setBorder(new MatteBorder(0, 0, 2, 0, (Color) new Color(255, 69, 0)));
		fname1.setFont(new Font("Times New Roman", Font.PLAIN, 18));
		fname1.setColumns(10);
		fname1.setBounds(188, 145, 250, 30);
		panel_1.add(fname1);
		
		emailtxt1 = new JTextField();
		emailtxt1.setOpaque(false);
		emailtxt1.setBorder(new MatteBorder(0, 0, 2, 0, (Color) new Color(255, 69, 0)));
		emailtxt1.setFont(new Font("Times New Roman", Font.PLAIN, 18));
		emailtxt1.setForeground(new Color(255, 255, 255));
		emailtxt1.setColumns(10);
		emailtxt1.setBounds(188, 207, 250, 30);
		panel_1.add(emailtxt1);
		
		phnotxt1 = new JTextField();
		phnotxt1.setOpaque(false);
		phnotxt1.setBorder(new MatteBorder(0, 0, 2, 0, (Color) new Color(255, 69, 0)));
		phnotxt1.setFont(new Font("Times New Roman", Font.PLAIN, 18));
		phnotxt1.setForeground(new Color(255, 255, 255));
		phnotxt1.setColumns(10);
		phnotxt1.setBounds(188, 267, 250, 30);
		panel_1.add(phnotxt1);
		
		password1 = new JPasswordField();
		password1.setOpaque(false);
		password1.setForeground(new Color(255, 255, 255));
		password1.setBorder(new MatteBorder(0, 0, 2, 0, (Color) new Color(255, 69, 0)));
		password1.setBounds(188, 406, 250, 30);
		panel_1.add(password1);
		
		JButton button_3 = new JButton("Homepage");
		button_3.setBorder(new LineBorder(new Color(255, 69, 0), 1, true));
		button_3.setForeground(new Color(255, 69, 0));
		button_3.setBounds(541, 473, 120, 50);
		panel_1.add(button_3);
		button_3.addActionListener(this);
		button_3.setFont(new Font("Times New Roman", Font.BOLD, 18));
		
		JLabel bck1 = new JLabel("New label");
		bck1.setIcon(new ImageIcon("C:\\Users\\KEDAR TERKHEDKAR\\Downloads\\WhatsApp Image 2019-10-07 at 12.38.10 AM.jpeg"));
		bck1.setBounds(0, 0, 1139, 539);
		panel_1.add(bck1);
		panel.setLayout(null);
		panel.setBorder(new MatteBorder(2, 2, 2, 2, (Color) new Color(255, 69, 0)));
		panel.setBounds(12, 131, 1139, 539);
		contentPane.add(panel);
		
		JLabel lblRegisterForm = new JLabel("Register Form");
		lblRegisterForm.setBorder(new LineBorder(new Color(255, 69, 0), 1, true));
		lblRegisterForm.setHorizontalAlignment(SwingConstants.CENTER);
		lblRegisterForm.setForeground(new Color(255, 255, 255));
		lblRegisterForm.setFont(new Font("Times New Roman", Font.BOLD, 32));
		lblRegisterForm.setBounds(228, 27, 653, 62);
		panel.add(lblRegisterForm);
		
		JLabel label_1 = new JLabel("Full Name");
		label_1.setForeground(new Color(255, 69, 0));
		label_1.setFont(new Font("Times New Roman", Font.BOLD, 18));
		label_1.setBounds(91, 145, 80, 30);
		panel.add(label_1);
		
		JLabel label_2 = new JLabel("Email ID");
		label_2.setForeground(new Color(255, 69, 0));
		label_2.setFont(new Font("Times New Roman", Font.BOLD, 18));
		label_2.setBounds(91, 202, 80, 30);
		panel.add(label_2);
		
		JLabel label_3 = new JLabel("Phone no.");
		label_3.setForeground(new Color(255, 69, 0));
		label_3.setFont(new Font("Times New Roman", Font.BOLD, 18));
		label_3.setBounds(91, 260, 80, 30);
		panel.add(label_3);
		
		JLabel lblYjfgbd = new JLabel("Location");
		lblYjfgbd.setForeground(new Color(255, 69, 0));
		lblYjfgbd.setFont(new Font("Times New Roman", Font.BOLD, 18));
		lblYjfgbd.setBounds(91, 316, 80, 30);
		panel.add(lblYjfgbd);
		
		JLabel label_5 = new JLabel("Blood Group");
		label_5.setForeground(new Color(255, 69, 0));
		label_5.setFont(new Font("Times New Roman", Font.BOLD, 18));
		label_5.setBounds(591, 145, 120, 30);
		panel.add(label_5);
		
		JLabel label_7 = new JLabel("New Password");
		label_7.setForeground(new Color(255, 69, 0));
		label_7.setFont(new Font("Times New Roman", Font.BOLD, 18));
		label_7.setBounds(591, 202, 120, 30);
		panel.add(label_7);
		
		JLabel label_8 = new JLabel("Date Of Birth");
		label_8.setForeground(new Color(255, 69, 0));
		label_8.setFont(new Font("Times New Roman", Font.BOLD, 18));
		label_8.setBounds(591, 258, 120, 30);
		panel.add(label_8);
		
		JLabel label_9 = new JLabel("Gender");
		label_9.setForeground(new Color(255, 69, 0));
		label_9.setFont(new Font("Times New Roman", Font.BOLD, 18));
		label_9.setBounds(91, 403, 80, 30);
		panel.add(label_9);
		
		JLabel lblWeight = new JLabel("Weight");
		lblWeight.setForeground(new Color(255, 69, 0));
		lblWeight.setFont(new Font("Times New Roman", Font.BOLD, 18));
		lblWeight.setBounds(591, 312, 80, 30);
		panel.add(lblWeight);
		
		fnametxt = new JTextField();
		fnametxt.setForeground(new Color(255, 255, 255));
		fnametxt.setOpaque(false);
		fnametxt.setFont(new Font("Tahoma", Font.PLAIN, 18));
		fnametxt.setBorder(new MatteBorder(0, 0, 2, 0, (Color) new Color(255, 69, 0)));
		fnametxt.setColumns(10);
		fnametxt.setBounds(188, 145, 250, 30);
		panel.add(fnametxt);
		
		emailidtxt = new JTextField();
		emailidtxt.setForeground(new Color(255, 255, 255));
		emailidtxt.setOpaque(false);
		emailidtxt.setFont(new Font("Tahoma", Font.PLAIN, 18));
		emailidtxt.setBorder(new MatteBorder(0, 0, 2, 0, (Color) new Color(255, 69, 0)));
		emailidtxt.setColumns(10);
		emailidtxt.setBounds(188, 206, 250, 30);
		panel.add(emailidtxt);
		
		JList list = new JList();
		list.setBounds(191, 407, 31, -30);
		panel.add(list);
		
		password = new JPasswordField();
		password.setForeground(new Color(255, 255, 255));
		password.setOpaque(false);
		password.setFont(new Font("Tahoma", Font.PLAIN, 18));
		password.setBorder(new MatteBorder(0, 0, 2, 0, (Color) new Color(255, 69, 0)));
		password.setBounds(723, 206, 250, 30);
		panel.add(password);
		
		bgcombo = new JComboBox();
		bgcombo.setBorder(new LineBorder(new Color(255, 69, 0)));
		bgcombo.setBackground(new Color(255, 255, 255));
		bgcombo.setForeground(new Color(255, 69, 0));
		bgcombo.setModel(new DefaultComboBoxModel(new String[] {"A+", "A-", "B+", "B-", "AB+", "AB-", "O+", "O-"}));
		bgcombo.setFont(new Font("Times New Roman", Font.PLAIN, 18));
		bgcombo.setBounds(723, 149, 100, 30);
		panel.add(bgcombo);
		
		gendercombo = new JComboBox();
		gendercombo.setBorder(new LineBorder(new Color(255, 69, 0)));
		gendercombo.setBackground(new Color(255, 255, 255));
		gendercombo.setForeground(new Color(255, 69, 0));
		gendercombo.setModel(new DefaultComboBoxModel(new String[] {"Male", "Female", "Other"}));
		gendercombo.setFont(new Font("Times New Roman", Font.PLAIN, 18));
		gendercombo.setBounds(184, 407, 100, 30);
		panel.add(gendercombo);
		
		weightxt = new JTextField();
		weightxt.setForeground(new Color(255, 255, 255));
		weightxt.setOpaque(false);
		weightxt.setFont(new Font("Tahoma", Font.PLAIN, 18));
		weightxt.setBorder(new MatteBorder(0, 0, 2, 0, (Color) new Color(255, 69, 0)));
		weightxt.setColumns(10);
		weightxt.setBounds(725, 316, 250, 30);
		panel.add(weightxt);
		
		JButton button_1 = new JButton("Homepage");
		button_1.setBorder(new LineBorder(new Color(255, 69, 0), 1, true));
		button_1.setForeground(new Color(255, 69, 0));
		button_1.addActionListener(this);
		button_1.setFont(new Font("Times New Roman", Font.BOLD, 17));
		button_1.setBounds(541, 473, 120, 50);
		panel.add(button_1);
		
		phnnotxt = new JTextField();
		phnnotxt.setForeground(new Color(255, 255, 255));
		phnnotxt.setOpaque(false);
		phnnotxt.setFont(new Font("Tahoma", Font.PLAIN, 18));
		phnnotxt.setBorder(new MatteBorder(0, 0, 2, 0, (Color) new Color(255, 69, 0)));
		phnnotxt.setBounds(188, 261, 250, 30);
		panel.add(phnnotxt);
		phnnotxt.setColumns(10);
		
		dobtxt = new JTextField();
		dobtxt.setForeground(new Color(255, 255, 255));
		dobtxt.setOpaque(false);
		dobtxt.setFont(new Font("Tahoma", Font.PLAIN, 18));
		dobtxt.setBorder(new MatteBorder(0, 0, 2, 0, (Color) new Color(255, 69, 0)));
		dobtxt.setColumns(10);
		dobtxt.setBounds(723, 258, 250, 30);
		panel.add(dobtxt);
		
		JButton button_2 = new JButton("Submit as Donor");
		button_2.setBorder(new LineBorder(new Color(255, 69, 0), 1, true));
		button_2.setForeground(new Color(255, 69, 0));
		button_2.setBounds(308, 473, 200, 50);
		panel.add(button_2);
		button_2.addActionListener(this);
		button_2.setFont(new Font("Times New Roman", Font.BOLD, 22));
		
		comboBox = new JComboBox();
		comboBox.setBorder(new LineBorder(new Color(255, 69, 0), 1, true));
		comboBox.setForeground(new Color(255, 69, 0));
		comboBox.setModel(new DefaultComboBoxModel(new String[] {"Kothrud", "Karve Nagar", "Warje"}));
		comboBox.setFont(new Font("Times New Roman", Font.PLAIN, 18));
		comboBox.setBounds(191, 321, 250, 30);
		panel.add(comboBox);
		
		JLabel lblyyyymmdd = new JLabel("(YYYY-MM-DD)");
		lblyyyymmdd.setForeground(new Color(255, 255, 255));
		lblyyyymmdd.setFont(new Font("Times New Roman", Font.PLAIN, 14));
		lblyyyymmdd.setBounds(988, 261, 128, 30);
		panel.add(lblyyyymmdd);
		
		JLabel lblNewLabel_1 = new JLabel("New label");
		lblNewLabel_1.setIcon(new ImageIcon("C:\\Users\\KEDAR TERKHEDKAR\\Downloads\\WhatsApp Image 2019-10-07 at 12.38.10 AM.jpeg"));
		lblNewLabel_1.setBounds(0, 0, 1139, 539);
		panel.add(lblNewLabel_1);
		btnNewButton.setFont(new Font("Times New Roman", Font.BOLD, 22));
		btnNewButton.setBounds(319, 28, 220, 70);
		contentPane.add(btnNewButton);
		
		JButton btnNewButton_1 = new JButton("As User");
		btnNewButton_1.setBorder(new LineBorder(new Color(255, 69, 0), 1, true));
		btnNewButton_1.setForeground(new Color(255, 69, 0));
		btnNewButton_1.addActionListener(this);
		btnNewButton_1.setFont(new Font("Times New Roman", Font.BOLD, 22));
		btnNewButton_1.setBounds(593, 31, 220, 70);
		contentPane.add(btnNewButton_1);
		
		JLabel lblResgister = new JLabel("Register");
		lblResgister.setForeground(Color.RED);
		lblResgister.setFont(new Font("Times New Roman", Font.BOLD, 46));
		lblResgister.setBounds(49, 28, 220, 70);
		contentPane.add(lblResgister);
		
		JLabel lblNewLabel = new JLabel("New label");
		lblNewLabel.setIcon(new ImageIcon("C:\\Users\\KEDAR TERKHEDKAR\\Downloads\\WhatsApp Image 2019-10-07 at 12.38.10 AM.jpeg"));
		lblNewLabel.setBounds(0, 0, 1195, 700);
		contentPane.add(lblNewLabel);
	}

	public void actionPerformed(ActionEvent e) {
		// TODO Auto-generated method stub
		String cmd = e.getActionCommand();
		String sql, sql1;
		Connection conn = Connector.ConnectDb();
		if (cmd == "As User"){
			panel.setVisible(true);
			panel_1.setVisible(false);
		}
		else if(cmd == "Submit as Donor"){	
			while (true) {
				String text = fnametxt.getText();
				System.out.println(text);
				// qif(){}
				String text2 = emailidtxt.getText();
				System.out.println(text2);
				String x = new String(password.getPassword());
				System.out.println(x);
				String text3 = phnnotxt.getText();
				System.out.println(text3);
				String text4 = dobtxt.getText();
				if(!isValid(emailidtxt.getText())){
					errorlbl.setText("Incorrect Email ID!");
					break;
				}
				if(x.length() <= 7 || x.length() >= 14){
					errorlbl.setText("Password  too short or too long! Please keep it between 8 & 13 letters!");
					break;
				}
				if(!isValidnumber(text3)){
					errorlbl.setText("Phone Number Wrong!");
					break;
				}
				if(!isValidDate(text4)){
					errorlbl.setText("Date Format Wrong!");
					break;
				}
				int userid = 0;
				sql = "insert into donor_info (Phone_Number, Address, DOB, Gender, Blood_Group, Weight, AC_ID) values (?,?,?,?,?,?,?);";
				sql1 = "insert into login_info (Full_Name, EmailID, Password, type_user) values (?, ?, ?, ?);";
				try {
					PreparedStatement pst1 = conn.prepareStatement(sql1); //login
					pst1.setString(1, text);
					pst1.setString(2, text2);
					
					pst1.setString(3, x);
					pst1.setInt(4, userid);
					int rs1 = pst1.executeUpdate();
					sql1 = "select AC_ID from login_info where emailid=?";
					pst1 = conn.prepareStatement(sql1);
					pst1.setString(1, text2);
					ResultSet result = pst1.executeQuery();
					result.next();
					int acid = result.getInt("AC_ID");

					PreparedStatement pst = conn.prepareStatement(sql); //donor
					
					pst.setString(1, text3);
					pst.setString(2, comboBox.getSelectedItem().toString());
					
					pst.setString(3, text4);
					pst.setString(4, gendercombo.getSelectedItem().toString());
					pst.setString(5, bgcombo.getSelectedItem().toString());
					pst.setString(6, weightxt.getText());
					pst.setInt(7, acid);

					System.out.println("here");
					int rs = pst.executeUpdate();
					System.out.println(rs + " " + rs1);
					dispose();
					loginpage login = new loginpage();
					login.frame.setVisible(true);
					userid = 9;
				} catch (Exception e1) {
					// TODO Auto-generated catch block
					e1.printStackTrace();
				}
			errorlbl.setText("Successfully Registered");
			break;
			}
		}
		else if(cmd == "Homepage"){
			dispose();
			loginpage login = new loginpage();
			login.frame.setVisible(true);
		}
		else if(cmd == "As Blood Bank"){
			panel_1.setVisible(true);
			panel.setVisible(false);
		}
		else if(cmd == "Submit as Blood Bank"){
			int userid = 1;
			while (true) {
				String text = fname1.getText();
				// qif(){}
				String text2 = emailtxt1.getText();
				String x = new String(password.getPassword());
				String text3 = phnotxt1.getText();
				if(!isValid(text2)){
					errorlbl.setText("Incorrect Email ID!");
					break;
				}
				if(x.length() <= 7 || x.length() >= 14){
					errorlbl.setText("Password  too short or too long! Please keep it between 8 & 13 letters!");
					break;
				}
				if(!isValidnumber(text3)){
					errorlbl.setText("Phone Number Wrong!");
					break;
				}
				String sql_1 = "insert into login_info (Full_Name, EmailID, Password, type_user) values (?, ?, ?, ?);";
				String sql_2 = "insert into blood_bank (Location, Phone_Number, AC_ID) values(?,?,?)";
				try {
					PreparedStatement pst1 = conn.prepareStatement(sql_1); //login
					pst1.setString(1, text);
					pst1.setString(2, text2);
					pst1.setString(3, x);
					pst1.setInt(4, userid);
					int rs1 = pst1.executeUpdate();
					sql1 = "select AC_ID from login_info where emailid=?";
					pst1 = conn.prepareStatement(sql1);
					pst1.setString(1, text2);
					ResultSet result = pst1.executeQuery();
					result.next();
					int acid = result.getInt("AC_ID");

					PreparedStatement pst = conn.prepareStatement(sql_2); //BBinfo
					pst.setString(1, comboBox_1.getSelectedItem().toString());
					pst.setString(2, text3);
					pst.setInt(3, acid);

					System.out.println("here");
					int rs = pst.executeUpdate();

					String sql_3 = "insert into blood_availability (Ap, An, Bp, Bn, ABp, ABn, Op, Oneg, AC_ID) values (?,?,?,?,?,?,?,?,?)";
					pst = conn.prepareStatement(sql_3);
					pst.setInt(9, acid);
					pst.setInt(1, 0);
					pst.setInt(2, 0);
					pst.setInt(3, 0);
					pst.setInt(4, 0);
					pst.setInt(5, 0);
					pst.setInt(6, 0);
					pst.setInt(7, 0);
					pst.setInt(8, 0);
					int rs2 = pst.executeUpdate();

					if (rs1 == 1 && rs2 == 1 && rs == 1) {
						System.out.println("REGISTRATION SUCCESSFULL");
					}

					dispose();
					loginpage login = new loginpage();
					login.frame.setVisible(true);
				} catch (Exception e1) {
					// TODO Auto-generated catch block
					e1.printStackTrace();
				}
				errorlbl.setText("Successfully Registered");
			break;
			}
		}
		else{
			System.out.println("ERROR IN USER ID");
		}
	}
	static boolean isValid(String email) {
	      String regex = "^[\\w-_\\.+]*[\\w-_\\.]\\@([\\w]+\\.)+[\\w]+[\\w]$";
	      return email.matches(regex);
	}
	
	static boolean isValidDate(String date) {
		String regex = "[12][90][0-9]{2}-(0[0-9]|1[0-2])-([02][09]|3[0-1])";
	      return date.matches(regex);
	}
	
	public static boolean isValidnumber(String s) 
    { 
        // The given argument to compile() method  
        // is regular expression. With the help of  
        // regular expression we can validate mobile 
        // number.  
        // 1) Begins with 0 or 91 
        // 2) Then contains 7 or 8 or 9. 
        // 3) Then contains 9 digits 
        Pattern p = Pattern.compile("(0/91)?[7-9][0-9]{9}"); 
  
        // Pattern class contains matcher() method 
        // to find matching between given number  
        // and regular expression 
        Matcher m = p.matcher(s); 
        return (m.find() && m.group().equals(s)); 
    } 
}
